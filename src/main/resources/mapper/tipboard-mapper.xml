<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="TipBoard">

	<resultMap type="TipDTO" id="TipDTOResultMap">
		<result property="tip_seq" column="tip_seq" jdbcType="INTEGER"
			javaType="java.lang.Integer" />
		<result property="tip_title" column="tip_title" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result property="tip_contents" column="tip_contents" jdbcType="CLOB"
			javaType="java.lang.String" />
		<result property="tip_writer" column="tip_writer" jdbcType="INTEGER"
			javaType="java.lang.Integer" />
		<result property="tip_viewcount" column="tip_viewcount"
			jdbcType="VARCHAR" javaType="java.lang.String" />
		<result property="category" column="category" jdbcType="VARCHAR"
			javaType="java.lang.String" />
		<result property="tip_like_count" column="tip_like_count"
			jdbcType="INTEGER" javaType="java.lang.Integer" />
		<result property="tip_comment_count" column="tip_comment_count"
			jdbcType="INTEGER" javaType="java.lang.Integer" />
					
	</resultMap>

	<!-- 글쓰기 sql -->
	<insert id="insertData" parameterType="TipDTO">
		insert into TIP
		values(TIP_SEQ.NEXTVAL,#{tip_title},#{tip_contents},#{tip_writer},sysdate,#{tip_viewcount},#{category})
	</insert>


	<!-- tip delete sql -->
	<delete id="deleteSpecificTip" parameterType="TipDTO">
		{ call
		declare
		begin
		delete from tip_comment where tip_seq = #{tip_seq};
		delete from
		tip_good where tip_seq=#{tip_seq};
		delete from tip where tip_seq =
		#{tip_seq};
		end }
	</delete>

	<!-- tip articles get sql -->
	<select id="getBeautyTipData" parameterType="TipDTO" resultMap="TipDTOResultMap">
	
select t.*, tg.tip_like_count, tc.tip_comment_count, u.name from 
users u,
tip t 
left outer join (select tip_seq, count(*) tip_like_count from tip_good group by tip_seq) tg on t.tip_seq = tg.tip_seq 
left outer join (select tip_seq, count(*) tip_comment_count from tip_comment group by tip_seq) tc on t.tip_seq = tc.tip_seq

where t.category = '뷰티'
and u.SEQ = t.tip_writer
order by t.tip_seq desc

	</select>

	<select id="getDietTipData" parameterType="TipDTO" resultMap="TipDTOResultMap">
select t.*, tg.tip_like_count, tc.tip_comment_count, u.name from 
users u,
tip t 
left outer join (select tip_seq, count(*) tip_like_count from tip_good group by tip_seq) tg on t.tip_seq = tg.tip_seq 
left outer join (select tip_seq, count(*) tip_comment_count from tip_comment group by tip_seq) tc on t.tip_seq = tc.tip_seq

where t.category = '다이어트'
and u.SEQ = t.tip_writer
order by t.tip_seq desc
	</select>

	<select id="getFashionTipData" parameterType="TipDTO" resultMap="TipDTOResultMap">
		select t.*, tg.tip_like_count, tc.tip_comment_count, u.name from 
users u,
tip t 
left outer join (select tip_seq, count(*) tip_like_count from tip_good group by tip_seq) tg on t.tip_seq = tg.tip_seq 
left outer join (select tip_seq, count(*) tip_comment_count from tip_comment group by tip_seq) tc on t.tip_seq = tc.tip_seq

where t.category = '패션'
and u.SEQ = t.tip_writer
order by t.tip_seq desc
	</select>


	<select id="getBusinessTipData" parameterType="TipDTO"
		resultMap="TipDTOResultMap">
select t.*, tg.tip_like_count, tc.tip_comment_count, u.name from 
users u,
tip t 
left outer join (select tip_seq, count(*) tip_like_count from tip_good group by tip_seq) tg on t.tip_seq = tg.tip_seq 
left outer join (select tip_seq, count(*) tip_comment_count from tip_comment group by tip_seq) tc on t.tip_seq = tc.tip_seq

where t.category = '직장생활'
and u.SEQ = t.tip_writer
order by t.tip_seq desc



	</select>

	<!-- getToBeUpvotingArticles 50>tip_like_count>15 -->
	<select id="getUpvotingArticles" parameterType="TipDTO"
		resultMap="TipDTOResultMap">
			
			
		select * from users u, 
		tip t left outer join (select tip_seq, count(*) tip_like_count from tip_good group by tip_seq) tg on t.tip_seq =
		tg.tip_seq 
		
		where u.seq = t.tip_writer 
		and 
		<![CDATA[ (tg.tip_like_count>15) and (tg.tip_like_count<50) ]]>
		order by tg.tip_like_count desc
	</select>


	<!-- specific article get sql by #{tip_seq} number -->
	<select id="getSpecificTipView" parameterType="TipDTO"
		resultMap="TipDTOResultMap">
<!-- 		select * from Tip where tip_seq=#{seq} -->
		select * from tip t , users u where t.tip_seq=#{seq} and u.seq = t.tip_writer
		
		
	</select>

	<!-- tip board viewcount +1 proc -->
	<update id="viewCountPlus" parameterType="TipDTO">
		update tip set
		tip_viewcount = tip_viewcount+1 where tip_seq=#{seq}
	</update>

	<!-- tipArticle Like +1 Proc -->
	<insert id="tipArticleLikeProc" parameterType="HashMap">
		insert into
		tip_good
		values(TIP_GOOD_SEQ.NEXTVAL,#{seq},#{tipLikingUser,jdbcType=INTEGER,javaType=Integer})
	</insert>


<update id="tipModifyProc" parameterType="TipDTO">
update tip set tip_contents = #{tip_contents}, tip_title = #{tip_title}  where tip_seq = #{tip_seq}
</update>

<select id="searchedTipBoard" resultType="searchedtipdto" parameterType="String">
	select t.tip_seq, t.tip_title, t.tip_writer, t.tip_date, t.tip_viewcount, t.category, tg.tip_like_count, u.name, u.photo from users u, tip t left outer join (select tip_seq, count(*) tip_like_count from tip_good group by tip_seq) tg on t.tip_seq = tg.tip_seq 
	left outer join (select tip_seq, count(*) tip_comment_count from tip_comment group by tip_seq) tc on t.tip_seq = tc.tip_seq
	where u.SEQ = t.tip_writer and tip_title like '%'||#{0}||'%' order by t.tip_seq desc
</select>

<select id="getTipBoardList" parameterType="String" resultType="TipDTO">
	select t.*, tg.tip_like_count, tc.tip_comment_count, u.name from 
	users u, tip t 
	left outer join (select tip_seq, count(*) tip_like_count from tip_good group by tip_seq) tg on t.tip_seq = tg.tip_seq 
	left outer join (select tip_seq, count(*) tip_comment_count from tip_comment group by tip_seq) tc on t.tip_seq = tc.tip_seq
	where u.SEQ = t.tip_writer
	<if test="value != null">
		 and t.category = #{value}
	</if>
	order by t.tip_seq desc
</select>

<select id="getTipBoardListRange" parameterType="map" resultType="TipDTO">
	select tip_seq,tip_title,tip_contents,tip_writer,tip_date,tip_viewcount,category,tip_like_count,tip_comment_count, name from (
	select t.*, tg.tip_like_count, tc.tip_comment_count, u.name, row_number() over (order by t.tip_seq desc) as recent from users u, tip t 
	left outer join (select tip_seq, count(*) tip_like_count from tip_good group by tip_seq) tg on t.tip_seq = tg.tip_seq 
	left outer join (select tip_seq, count(*) tip_comment_count from tip_comment group by tip_seq) tc on t.tip_seq = tc.tip_seq
	where u.SEQ = t.tip_writer
	<if test="category != null">
		 and category = #{category}
	</if>
	 order by recent asc) where recent between #{start} and #{end}
</select>

<select id="getTipBoardCount" parameterType="String" resultType="int">
	select count(*) from 
	users u, tip t 
	left outer join (select tip_seq, count(*) tip_like_count from tip_good group by tip_seq) tg on t.tip_seq = tg.tip_seq 
	left outer join (select tip_seq, count(*) tip_comment_count from tip_comment group by tip_seq) tc on t.tip_seq = tc.tip_seq
	where u.SEQ = t.tip_writer
	<if test="value != null">
		 and t.category = #{value}
	</if>
</select>
</mapper>