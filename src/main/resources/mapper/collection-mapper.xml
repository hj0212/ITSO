<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Collection">
	<select id="getCollectionList" parameterType ="dto" resultType="CollectionDTO">
		select * from collection where collection_writer = #{seq}
	</select>
	
	<select id="getCollectionPhotoList" resultType="sdto">
		select c1.collection_seq, c2.social_seq, c2.photo from (select c.collection_seq, c.social_seq, s.photo from collection_content c, social s where c.social_seq = s.social_seq) c2, collection c1 where c2.collection_seq = c1.collection_seq and c1.collection_writer = #{seq}
	</select>
	
	<select id="getSearchedCollectionList" parameterType="String" resultType="CollectionDTO">
		select * from collection where collection_title like '%'||#{0}||'%' or collection_contents like '%'||#{0}||'%'
	</select>
	
	<select id="getSearchedCollectionPhotoList" resultType="sdto" parameterType="String">
		select c1.collection_seq, c2.social_seq, c2.photo from (select c.collection_seq, c.social_seq, s.photo from collection_content c, social s where c.social_seq = s.social_seq) c2, collection c1 where c2.collection_seq = c1.collection_seq and c1.collection_title like '%'||#{0}||'%' or c1.collection_contents like '%'||#{0}||'%'
	</select>
	
	<select id="getCollectionSocialList" resultType="sdto">
		select c.collection_seq, s.social_seq, s.social_title, s.social_contents, s.social_writer, s.social_date,  s.photo, s.gender, s.age, u.name writerName, u.state userState from collection_content c, social s, users u where c.social_seq = s.social_seq and s.social_writer=u.seq and c.collection_seq = #{collection_seq}
	</select>
	
	<select id="getCollectionData" resultType="CollectionDTO">
		select c.*, u.name writerName from collection c, users u where c.collection_writer = u.seq and collection_seq = #{collection_seq}
	</select>
	
	<insert id="insertCollectionContent" parameterType="CollectionDTO">
		insert into collection_content values(#{collection_seq}, #{social_seq})
	</insert>
	
	<delete id="deleteCollectionContent" parameterType="sdto">
		delete from collection_content where social_seq = #{social_seq} and collection_seq = #{collection_seq}
	</delete>
	
	<select id="selectCollectionContent" resultType="sdto">
		select * from collection_content where social_seq = #{social_seq} and collection_seq = #{collection_seq}
	</select>
	
	<select id="getCollectionSeq" resultType="CollectionDTO">
		select * from collection where collection_title = #{collection_title} and collection_contents = #{collection_contents} and collection_writer = #{collection_writer}
	</select>
	
	<select id="getCollectionInfo" resultType="CollectionDTO">
		select c.*, cc.count, u.name writerName, u.photo user_photo, u.state userState from collection c, users u, (select collection_seq, count(*) count from collection_content group by collection_seq) cc where c.collection_seq = cc.collection_seq(+) and u.seq = c.collection_writer and c.collection_seq = #{collection_seq}
	</select>
	
	<insert id="insertCollection" parameterType="CollectionDTO">
		insert into collection values (collection_seq.nextval, #{collection_title}, #{collection_contents}, #{collection_writer})
	</insert>
	
	<delete id="deleteCollection">
		delete from collection where collection_seq=#{collection_seq} 
	</delete>
	
	<update id="updateCollection">
		update collection set collection_title=#{collection_title}, collection_contents=#{collection_contents} where collection_seq = #{collection_seq}
	</update>
</mapper>